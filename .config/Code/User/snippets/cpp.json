{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"boilerplate": {
			"prefix": "]",
			"body": [
				"#include <bits/stdc++.h>",
				"",
				"int main()",
				"{",
				"\t$0",
				"\treturn 0;",
				"}"
			],
			"description": "c++ boilerplate"
		},

	"cout": {
		"prefix": ",",
		"body": [
			"std::cout<<$0;"
		],
		"description": "cout"
	},

	"cin": {
		"prefix": ".",
		"body": [
			"std::cin>>$0;"
		],
		"description": "cin"
	},

	"ss": {
		"prefix": "ss",
		"body": [
			"std::getline(std::cin>>std::ws,$0);"
		],
		"description": "str in"
	},

	"\"\"\"\"feature\"\"\"\"": {
		"prefix": "/",
		"body": [
			"std::$0"
		],
		"description": "std::snippet"
	},

	"class":{
		"prefix":"c",
		"body":[
			"class $1",
			"{",
			"public:",
			"\t$0",
			"};",
		]
	},
}